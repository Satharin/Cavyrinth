package com.example.rafal.gra;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class SkillsActivity extends AppCompatActivity {

    public static Bundle skills = new Bundle();
    int postacMon, postacAtk, postacDef, postacHp, postacMana, postacSp, postacCrit, postacCritChance;
    int addedHp, addedMana, addedAtk, addedDef, addedCrit, addedCritChance;

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_skills);

        //Wyświetlenie danych skilli
        odczyt();
        showSkills();
        odswiez();

    }

    public void resetSp(View view) {

        if (postacMon >= 1000) {

            AlertDialog.Builder reset = new AlertDialog.Builder(this);
            reset.setMessage("Are you sure you want to reset your Skill Points for 1000 gold?")
                    .setNegativeButton("Yes", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            postacMon -= 1000;
                            postacSp += (addedHp+addedMana+addedAtk+addedDef+addedCrit+addedCritChance);
                            resetHp();
                            resetMana();
                            resetAtk();
                            resetDef();
                            resetCrit();
                            resetCritChance();
                            odswiez();
                        }
                    })
                    .setPositiveButton("No", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            dialog.dismiss();
                        }
                    })
                    .create();
            reset.show();

        } else {

            AlertDialog.Builder noMoney = new AlertDialog.Builder(this);
            noMoney.setMessage("You need 1000 gold to reset Skill Points.")
                    .setPositiveButton("OK", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            dialog.dismiss();
                        }
                    })
                    .create();
            noMoney.show();

        }

    }

    public void powrot(View view) {

        zapis();
        startActivity(new Intent(getApplicationContext(), MainActivity.class));
        finish();

    }

    public void odczyt() {

        SharedPreferences loadE = getSharedPreferences("Save", MODE_PRIVATE);
        SharedPreferences.Editor editor4 = loadE.edit();
        postacMon = loadE.getInt("money", 0);
        postacAtk = loadE.getInt("atk", 5);
        postacDef = loadE.getInt("def", 5);
        postacHp = loadE.getInt("hp", 200);
        postacMana = loadE.getInt("mana", 200);
        postacSp = loadE.getInt("sp", 0);
        postacCrit = loadE.getInt("crit", 5);
        postacCritChance = loadE.getInt("critChance", 10);

        //Wczytanie ilości rozdanych Skill Pointsów
        SharedPreferences loadSkill = getSharedPreferences("SaveSkill", MODE_PRIVATE);
        SharedPreferences.Editor skille = loadSkill.edit();
        addedHp = loadSkill.getInt("addedHp", 0);
        addedMana = loadSkill.getInt("addedMana", 0);
        addedAtk = loadSkill.getInt("addedAtk", 0);
        addedDef = loadSkill.getInt("addedDef", 0);
        addedCrit = loadSkill.getInt("addedCrit", 0);
        addedCritChance = loadSkill.getInt("addedCritChance", 0);

    }

    public void zapis() {


        //Zapis ogolny
        SharedPreferences saveGame = getSharedPreferences("Save", MODE_PRIVATE);
        SharedPreferences.Editor save = saveGame.edit();
        save.putInt("money", postacMon);
        save.putInt("atk", postacAtk);
        save.putInt("def", postacDef);
        save.putInt("hp", postacHp);
        save.putInt("mana", postacMana);
        save.putInt("sp", postacSp);
        save.putInt("crit", postacCrit);
        save.putInt("critChance", postacCritChance);
        save.apply();

        //Zapis skilli
        SharedPreferences saveSkill = getSharedPreferences("SaveSkill", MODE_PRIVATE);
        SharedPreferences.Editor skille = saveSkill.edit();
        skille.putInt("addedHp", addedHp);
        skille.putInt("addedMana", addedMana);
        skille.putInt("addedAtk", addedAtk);
        skille.putInt("addedDef", addedDef);
        skille.putInt("addedCrit", addedCrit);
        skille.putInt("addedCritChance", addedCritChance);
        skille.apply();
    }

    public void odswiez() {

        Button Hp = (Button) findViewById(R.id.addHp);
        Button Mana = (Button) findViewById(R.id.addMana);
        Button Atk = (Button) findViewById(R.id.addAtk);
        Button Def = (Button) findViewById(R.id.addDef);
        Button Crit = (Button) findViewById(R.id.addCrit);
        Button critChance = (Button) findViewById(R.id.addCritChance);

        if (postacSp == 0) {

            Hp.setClickable(false);
            Hp.setEnabled(false);
            Mana.setClickable(false);
            Mana.setEnabled(false);
            Atk.setClickable(false);
            Atk.setEnabled(false);
            Def.setClickable(false);
            Def.setEnabled(false);
            Crit.setClickable(false);
            Crit.setEnabled(false);
            critChance.setClickable(false);
            critChance.setEnabled(false);

        } else {

            Hp.setClickable(true);
            Hp.setEnabled(true);
            Mana.setClickable(true);
            Mana.setEnabled(true);
            Atk.setClickable(true);
            Atk.setEnabled(true);
            Def.setClickable(true);
            Def.setEnabled(true);
            Crit.setClickable(true);
            Crit.setEnabled(true);
            critChance.setClickable(true);
            critChance.setEnabled(true);
        }

        showSkills();


    }

    public void addHp(View view) {

        postacHp += 10;
        postacSp -= 1;
        addedHp += 1;

        TextView addHp = (TextView) findViewById(R.id.textViewHp);
        StringBuilder hp = new StringBuilder("");
        hp.append("Health Points \n");
        hp.append("Current: " + Integer.toString(postacHp) + "\n");
        hp.append("Next: " + Integer.toString((postacHp + 10)) + "\n");
        hp.append("Used SP: " + Integer.toString(addedHp));
        addHp.setText(hp);
        odswiez();

    }

    public void addMana(View view) {

        postacMana += 10;
        postacSp -= 1;
        addedMana += 1;

        TextView addMana = (TextView) findViewById(R.id.textViewMana);
        StringBuilder mana = new StringBuilder("");
        mana.append("Mana Points \n");
        mana.append("Current: " + Integer.toString(postacMana) + "\n");
        mana.append("Next: " + Integer.toString((postacMana + 10)) + "\n");
        mana.append("Used SP: " + Integer.toString(addedMana));
        addMana.setText(mana);
        odswiez();

    }

    public void addAtk(View view) {

        postacAtk += 1;
        postacSp -= 1;
        addedAtk += 1;

        TextView addAtk = (TextView) findViewById(R.id.textViewAtk);
        StringBuilder atk = new StringBuilder("");
        atk.append("Attack \n");
        atk.append("Current: " + Integer.toString(postacAtk) + "\n");
        atk.append("Next: " + Integer.toString((postacAtk + 1)) + "\n");
        atk.append("Used SP: " + Integer.toString(addedAtk));
        addAtk.setText(atk);
        odswiez();

    }

    public void addDef(View view) {

        postacDef += 1;
        postacSp -= 1;
        addedDef += 1;

        TextView addDef = (TextView) findViewById(R.id.textViewDef);
        StringBuilder def = new StringBuilder("");
        def.append("Defence \n");
        def.append("Current: " + Integer.toString(postacDef) + "\n");
        def.append("Next: " + Integer.toString((postacDef + 1)) + "\n");
        def.append("Used SP: " + Integer.toString(addedDef));
        addDef.setText(def);
        odswiez();

    }

    public void addCrit(View view) {

        postacCrit += 1;
        postacSp -= 1;
        addedCrit += 1;

        TextView addCrit2 = (TextView) findViewById(R.id.textViewCrit);
        StringBuilder crit = new StringBuilder("");
        crit.append("Crit. hit % \n");
        crit.append("Current: " + Integer.toString(postacCrit) + "\n");
        crit.append("Next: " + Integer.toString((postacCrit + 1)) + "\n");
        crit.append("Used SP: " + Integer.toString(addedCrit));
        addCrit2.setText(crit);
        odswiez();

    }

    public void addCritChance(View view) {

        postacCritChance += 1;
        postacSp -= 1;
        addedCritChance += 1;

        TextView addCritChance2 = (TextView) findViewById(R.id.textViewCritChance);
        StringBuilder critChance = new StringBuilder("");
        critChance.append("Crit. chance % \n");
        critChance.append("Current: " + Integer.toString(postacCritChance) + "\n");
        critChance.append("Next: " + Integer.toString((postacCritChance + 1)) + "\n");
        critChance.append("Used SP: " + Integer.toString(addedCritChance));
        addCritChance2.setText(critChance);
        odswiez();

    }

    public void resetHp() {

        postacHp -= addedHp * 10;
        addedHp = 0;

        TextView addHp = (TextView) findViewById(R.id.textViewHp);
        StringBuilder hp = new StringBuilder("");
        hp.append("Health Points \n");
        hp.append("Current: " + Integer.toString(postacHp) + "\n");
        hp.append("Next: " + Integer.toString((postacHp + 10)) + "\n");
        hp.append("Used SP: " + Integer.toString(addedHp));
        addHp.setText(hp);
        odswiez();

    }

    public void resetMana() {

        postacMana -= addedMana * 10;
        addedMana = 0;

        TextView addMana = (TextView) findViewById(R.id.textViewMana);
        StringBuilder mana = new StringBuilder("");
        mana.append("Mana Points \n");
        mana.append("Current: " + Integer.toString(postacMana) + "\n");
        mana.append("Next: " + Integer.toString((postacMana + 10)) + "\n");
        mana.append("Used SP: " + Integer.toString(addedMana));
        addMana.setText(mana);
        odswiez();

    }

    public void resetAtk() {

        postacAtk -= addedAtk;
        addedAtk = 0;

        TextView addAtk = (TextView) findViewById(R.id.textViewAtk);
        StringBuilder atk = new StringBuilder("");
        atk.append("Attack \n");
        atk.append("Current: " + Integer.toString(postacAtk) + "\n");
        atk.append("Next: " + Integer.toString((postacAtk + 1)) + "\n");
        atk.append("Used SP: " + Integer.toString(addedAtk));
        addAtk.setText(atk);
        odswiez();

    }

    public void resetDef() {

        postacDef -= addedDef;
        addedDef = 0;

        TextView addDef = (TextView) findViewById(R.id.textViewDef);
        StringBuilder def = new StringBuilder("");
        def.append("Defence \n");
        def.append("Current: " + Integer.toString(postacDef) + "\n");
        def.append("Next: " + Integer.toString((postacDef + 1)) + "\n");
        def.append("Used SP: " + Integer.toString(addedDef));
        addDef.setText(def);
        odswiez();

    }

    public void resetCrit() {

        postacCrit -= addedCrit;
        addedCrit = 0;

        TextView addCrit = (TextView) findViewById(R.id.textViewCrit);
        StringBuilder crit = new StringBuilder("");
        crit.append("Crit. hit % \n");
        crit.append("Current: " + Integer.toString(postacCrit) + "\n");
        crit.append("Next: " + Integer.toString((postacCrit + 1)) + "\n");
        crit.append("Used SP: " + Integer.toString(addedCrit));
        addCrit.setText(crit);
        odswiez();

    }

    public void resetCritChance() {

        postacCritChance -= addedCritChance;
        addedCritChance = 0;

        TextView addCritChance = (TextView) findViewById(R.id.textViewCritChance);
        StringBuilder critChance = new StringBuilder("");
        critChance.append("Crit. chance % \n");
        critChance.append("Current: " + Integer.toString(postacCritChance) + "\n");
        critChance.append("Next: " + Integer.toString((postacCritChance + 1)) + "\n");
        critChance.append("Used SP: " + Integer.toString(addedCritChance));
        addCritChance.setText(critChance);
        odswiez();
    }

    public void showSkills() {

        TextView textViewSP = (TextView) findViewById(R.id.textViewSP);
        textViewSP.setText("Skill points: " + Integer.toString(postacSp));

        TextView addHp = (TextView) findViewById(R.id.textViewHp);
        StringBuilder hp = new StringBuilder("");
        hp.append("Current: " + Integer.toString(postacHp) + "\n");
        hp.append("Next: " + Integer.toString((postacHp + 10)) + "\n");
        hp.append("Used SP: " + Integer.toString(addedHp));
        addHp.setText(hp);

        TextView addMana = (TextView) findViewById(R.id.textViewMana);
        StringBuilder mana = new StringBuilder("");
        mana.append("Current: " + Integer.toString(postacMana) + "\n");
        mana.append("Next: " + Integer.toString((postacMana + 10)) + "\n");
        mana.append("Used SP: " + Integer.toString(addedMana));
        addMana.setText(mana);

        TextView addAtk = (TextView) findViewById(R.id.textViewAtk);
        StringBuilder atk = new StringBuilder("");
        atk.append("Current: " + Integer.toString(postacAtk) + "\n");
        atk.append("Next: " + Integer.toString((postacAtk + 1)) + "\n");
        atk.append("Used SP: " + Integer.toString(addedAtk));
        addAtk.setText(atk);

        TextView addDef = (TextView) findViewById(R.id.textViewDef);
        StringBuilder def = new StringBuilder("");
        def.append("Current: " + Integer.toString(postacDef) + "\n");
        def.append("Next: " + Integer.toString((postacDef + 1)) + "\n");
        def.append("Used SP: " + Integer.toString(addedDef));
        addDef.setText(def);

        TextView addCrit = (TextView) findViewById(R.id.textViewCrit);
        StringBuilder crit = new StringBuilder("");
        crit.append("Current: " + Integer.toString(postacCrit) + "\n");
        crit.append("Next: " + Integer.toString((postacCrit + 1)) + "\n");
        crit.append("Used SP: " + Integer.toString(addedCrit));
        addCrit.setText(crit);

        TextView addCritChance = (TextView) findViewById(R.id.textViewCritChance);
        StringBuilder critChance = new StringBuilder("");
        critChance.append("Current: " + Integer.toString(postacCritChance) + "\n");
        critChance.append("Next: " + Integer.toString((postacCritChance + 1)) + "\n");
        critChance.append("Used SP: " + Integer.toString(addedCritChance));
        addCritChance.setText(critChance);

    }


}
